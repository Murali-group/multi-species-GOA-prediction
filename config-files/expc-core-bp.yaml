# Evaluation settings for CV or LOSO can be set here 
eval_settings:
    # Minimum number of annotations for each term in the "left-out" species to test. Default: 10
    # used in the script src/annotation_prediction/src/evaluate/eval_leave_one_species_out.py
    num_ann_cutoff: 10
    # Postfix to append to output file. Useful if running multiple subsets of terms in parallel.
    #postfix: ""


# Input Settings: initialize base input folder names,
# and dataset collections
input_settings:

    # Base input directory
    input_dir: "inputs"

    # "datasets" denotes a list of experiments to run, each with the folling specified (a * indicates required options):
    #  *net_version: folder or file path to use for the input network files (and outputs). 
    #    Each individual network should be in the net_version file. 
    #
    #  net_files: list of one or more network files, 
    #    or a .mat file containing multiple networks.
    #    multi_net must be set to True if multiple networks are to be combined.
    #    the path should be from <input_dir>/<net_version>
    #
    #  string_net_files: a list of full STRING files, meaning all 16, tab-delimited columns are present
    #    the path should be from <input_dir>/<net_version>
    #
    #  *exp_name: the name to give the experiment to run
    #  plot_exp_name: the name to give the experiment when creating plots
    #
    #  *pos_neg_file: a 3 column, tab-delimited file with two lines per term.
    #    Col1: term, Col2: 1 or -1 denoting positive or negative, and a comma-separated list of proteins
    #
    #  only_functions_file: a file containing the term IDs to run.
    #
    #  pos_neg_file_eval: same as the pos_neg_file, only these annotations are used to evaluate.
    #    Some use cases: temporal holdout, or recovering annotations of another evidence code
    #
    #  # Settings specific to making predictions for multiple  species 
    #  taxon_prot_file: a tab-delimited file indicating the NCBI taxononmy ID (2nd col) for each gene/UniProt ID (1st col).
    #
    #  core_taxons_file: a file containing the taxon IDs to use for the core network
    #
    #  target_taxons_file: a file containing the taxon IDs for which to make predictions or evaluate. 
    #    Also used to get the names of the species
    #
    #  # Network combination options:
    #  ssnC: keep the SSN among nodes in the core
    #  stringC: keep the STRING edges among nodes in the core species
    #  stringT: keep the STRING edges among nodes in the target species
    #  ssnNbrs: compute scores among the core species, and then transfer them to the target taxons
    #
    #  # Additional options
    #  sp_leaf_terms_only: For each target species, only make predictions/evaluate for those 
    #    that are the most specific, meaning remove the ancestors of all terms
    #  youngs_neg:
    #  rem_neg_neighbors:
    #
    #   
    # this can be used to set the default settings and file paths for each dataset
    dataset_default_settings:
          net_files: ["sp200-eval-e0_1-net.txt.gz"]
          obo_file: "annotations/2019-10-15-go.obo"
          pos_neg_file: "annotations/expc/pos-neg-bp-20.tsv.gz"
          taxon_prot_file: "sequences/sp200-uniprot-mapping.tab"
          core_taxons_file: "taxons/expc/expc-bp-taxons.txt"
          target_taxons_file: "taxons/expc/expc-bp-taxons.txt"
          #sp_leaf_terms_only: True
          youngs_neg: True
          rem_neg_neighbors: False  

    datasets:

        - plot_exp_name: "ssnT+ssnC+stringT+stringC"
          exp_name: "expc/bp-leaf-yneg-full"
          net_version: "net-versions/2019_10-sp200-eval-e0_1-stringv11-700"
          ssnC: True  
          stringC: True  
          stringT: True  
          string_net_files: ["sp200-stringv11-700-net.txt.gz"]
          multi_net: True
          net_settings:
              weight_method: 'swsn'
              string_nets: 'core'
              string_cutoff: 700
              save_net: 'expc-bp-core-swsn-net.txt'

#        - plot_exp_name: "ssnC+stringC,ssnNbrs"
#          exp_name: "expc/bp-leaf-yneg-ssnC-stringC-ssnNbrs"
#          net_version: "net-versions/2019_10-sp200-eval-e0_1-stringv11-700"
#          ssnC: True  
#          stringC: True  
#          stringT: False  
#          ssnNbrs: True
#          string_net_files: ["sp200-stringv11-700-net.txt.gz"]
#          multi_net: True
#          net_settings:
#              weight_method: 'swsn'
#              string_nets: 'core'
#              string_cutoff: 700
#              save_net: 'expc-bp-core-swsn-net.txt'


# the outputs will follow this structure:
# <output_dir>/<net_version>/<exp_name>/<alg_name>/output_files
output_settings:
    output_dir: "outputs/"

# Algorithms to run along with their settings.
# All combinations of parameters will be run for each method with 'should_run' set to True
algs: 
    localplus:
        should_run: [False]

    fastsinksource:
        should_run: [True]
        alpha: [0.99]
        eps: [0]
        max_iters: [20]
    
    sinksource:
        should_run: [False]
        alpha: [1.0]
        eps: [0]
        max_iters: [2000]
    
    sinksource-bounds:
        should_run: [False]
        rank_all: [False]
        rank_pos_neg: [False]
        compare_ranks: [False]
        alpha: [0.95]
        max_iters: [10]

    genemania:
        should_run: [False]
        tol: [1e-05]

    birgrank:
        should_run: [False]
        alpha: [.95]
        lambda: [.01]
        mu: [.5]
        theta: [.5]
        eps: [1e-04]
        max_iters: [1000]

    async_rw:
        should_run: [False]
        alpha: [.1]
        min_len: [0]
        max_len: [10]

